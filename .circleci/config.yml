defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/rust:latest

version: 2

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-

      - checkout

      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/repo"
  build:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "Cargo.lock" }}
      - run: rustup install nightly
      - run: rustup default nightly
      - run:
          name: "Compile app"
          command: cargo build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - target
            - Cargo.lock
  test:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "Cargo.lock" }}
      - run: rustup install nightly
      - run: rustup default nightly
      - run:
          name: "Test"
          command: cargo test
  publish_release:
    <<: *defaults
    environment:
      IMAGE_NAME: multiplayer_server
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "Cargo.lock" }}
      - setup_remote_docker
      - run:
          name: "Build Docker Image"
          command:  docker build . -t $IMAGE_NAME:init
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:init
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: "Deploy to DO"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker stop $(docker ps -a -q)
              docker run -d -p 80:3001 -e RUST_ENV="docker" generalset/multiplayer_server:init
            fi
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - build:
          requires:
            - checkout_code
      - test:
          requires:
            - build
      - publish_release:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - publish_release
          filters:
            branches:
              only: master